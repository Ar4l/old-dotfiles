
# # fuck it why not use C-w in the first place:
# bind-key    -T root C-w   switch-client -T Cw
# bind-key -r -T Cw   Right select-pane   -R
# bind-key -r -T Cw   Left  select-pane   -L
# bind-key -r -T Cw   Up    select-pane   -U
# bind-key -r -T Cw   Down  select-pane   -D

# SSH aware kitty change window
if-shell '[ $SSH_TTY ]' 'to="--to=tcp:localhost:$KITTY_PORT "' 'to=""'
move='kitty @ ${to}kitten neighboring_window.py'

# Key Binds
bind-key -n 'C-h' if-shell "[ #{pane_at_left} != 1 ]" "select-pane -L" "run-shell '$move left'"
bind-key -n 'C-j' if-shell "[ #{pane_at_bottom} != 1 ]" "select-pane -D" "run-shell '$move bottom'"
bind-key -n 'C-k' if-shell "[ #{pane_at_top} != 1 ]" "select-pane -U" "run-shell '$move top'"
bind-key -n 'C-l' if-shell "[ #{pane_at_right} != 1 ]" "select-pane -R" "run-shell '$move right'"

# mouse scrolling, please??? I don't want to switch to a different mode just 
# to look at things 
set -g mouse on 

# Seeing as it now is actually feasible to scroll, and we live in a time with plenty of storage, 
# let's up the history we store from 2000 to like 100000
set-option -g history-limit 100000

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# # move around panes with hjkl, as one would in vim after pressing ctrl-w
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi
